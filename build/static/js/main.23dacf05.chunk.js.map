{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App/App.js","index.js","Components/ContactList/ContactList.module.css","App/App.module.css"],"names":["module","exports","ContactForm","state","name","number","nameId","uuidv4","numberId","handleSubmit","evt","preventDefault","resetForm","contact","id","props","formSubmit","inputChange","target","value","setState","this","className","s","formWrapper","form","onSubmit","label","htmlFor","input","type","placeholder","pattern","onChange","button","Component","ContactList","getContacts","deleteContact","listWrapper","list","map","item","text","onClick","Filter","filter","onFilterChange","App","contacts","obj","find","toLowerCase","alert","handleContacts","onContactsFilter","includes","filterChange","contactId","prevState","localStorage","getItem","parsedContacts","JSON","parse","prevProps","updatedContacts","setItem","stringify","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.23dacf05.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__GD2pY\",\"input\":\"Filter_input__2u0Yr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"ContactForm_formWrapper__2OkrB\",\"form\":\"ContactForm_form__3GvsN\",\"label\":\"ContactForm_label__3RQwC\",\"input\":\"ContactForm_input__1IGPI\",\"button\":\"ContactForm_button__XEpIb\"};","import s from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Component } from \"react\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  nameId = uuidv4();\n  numberId = uuidv4();\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    const { name, number } = this.state;\n    const { resetForm } = this;\n    const contact = { id: uuidv4(), name, number };\n    this.props.formSubmit(contact);\n    resetForm();\n  };\n\n  inputChange = (evt) => {\n    const { name, value } = evt.target;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  resetForm = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { handleSubmit, inputChange, nameId, numberId } = this;\n    const { name, number } = this.state;\n    return (\n      <div className={s.formWrapper}>\n        <form className={s.form} onSubmit={handleSubmit}>\n          <label className={s.label} htmlFor={nameId}>\n            Name\n            <input\n              id={nameId}\n              className={s.input}\n              value={name}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              onChange={inputChange}\n            />\n          </label>\n\n          <label className={s.label} htmlFor={numberId}>\n            Number\n            <input\n              id={numberId}\n              className={s.input}\n              type=\"tel\"\n              value={number}\n              name=\"number\"\n              placeholder=\"Number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              onChange={inputChange}\n            />\n          </label>\n          <button className={s.button}>Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n\n  nameId: PropTypes.number,\n  numberId: PropTypes.number,\n\n  handleSubmit: PropTypes.func,\n  formSubmit: PropTypes.func,\n  inputChange: PropTypes.func,\n};\n\nexport default ContactForm;\n","import s from \"./ContactList.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction ContactList({ getContacts, deleteContact }) {\n  return (\n    <div className={s.listWrapper}>\n      <ul className={s.list}>\n        {getContacts.map(({ name, number, id }) => (\n          <li className={s.item} key={id}>\n            <p className={s.text}>{name}:</p>\n            <p className={s.text}>{number}</p>\n            <button\n              className={s.button}\n              type=\"button\"\n              onClick={() => deleteContact(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nContactList.propTypes = {\n  getContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,\n    })\n  ),\n\n  deleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import s from \"./Filter.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction Filter({ filter, onFilterChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        onChange={onFilterChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  onFilterChange: PropTypes.func,\n  filter: PropTypes.string,\n};\n\nexport default Filter;\n","import { Component } from \"react\";\n\nimport s from \"./App.module.css\";\nimport ContactForm from \"../Components/ContactForm/ContactForm\";\nimport ContactList from \"../Components/ContactList/ContactList\";\nimport Filter from \"../Components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n  formSubmit = (obj) => {\n    const { contacts } = this.state;\n    if (\n      contacts.find(\n        (contact) => contact.name.toLowerCase() === obj.name.toLowerCase()\n      )\n    ) {\n      return alert(\"This contact has already been added to the list\");\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [obj, ...contacts],\n    }));\n  };\n\n  handleContacts = () => {\n    const { filter, contacts } = this.state;\n    const onContactsFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(onContactsFilter)\n    );\n  };\n\n  filterChange = (evt) => {\n    this.setState({ filter: evt.target.value });\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n   componentDidMount() {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const updatedContacts = this.state.contacts;\n    const prevContacts = prevState.contacts;\n    if (updatedContacts !== prevContacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(updatedContacts));\n    }\n  }\n\n  render() {\n    const { deleteContact, formSubmit, filterChange } = this;\n    const { filter } = this.state;\n    const getContacts = this.handleContacts();\n    return (\n      <div className={s.App}>\n        <h1 className={s.title}>Phonebook</h1>\n        <ContactForm formSubmit={formSubmit} />\n        <h2 className={s.title}>Contacts</h2>\n        <Filter filter={filter} onFilterChange={filterChange} />\n        <ContactList getContacts={getContacts} deleteContact={deleteContact} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__2pH5D\",\"text\":\"ContactList_text__2Cyrz\",\"button\":\"ContactList_button__1grJp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3-a6G\",\"title\":\"App_title__1l6Xo\"};"],"sourceRoot":""}